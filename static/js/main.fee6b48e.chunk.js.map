{"version":3,"sources":["components/UI/Error/Error.js","components/UI/Label/Label.js","components/UI/InputField/InputField.js","components/Sender&Receiver/Sender.jsx","redux/sender/sender.actions.js","redux/sender/sender.types.js","components/Sender&Receiver/Receiver.jsx","redux/receiver/receiver.actions.js","redux/receiver/receiver.types.js","components/UI/TextareaField/TextareaField.js","components/Message/Message.jsx","redux/message/message.actions.js","redux/message/message.types.js","components/Submit/Submit.jsx","redux/sentMessage/sentMessage.actions.js","redux/sentMessage/sentMessage.types.js","redux/attachedFiles/attachedFiles.actions.js","redux/attachedFiles/attachedFiles.types.js","components/DragDrop/DragDropComponent.jsx","components/DragDrop/DragDrop.jsx","components/UI/Icons/SmallPaperclipIcon.js","components/FileInput/FileInput.jsx","components/Modal/Modal.jsx","components/UI/Icons/TrashIcon.js","components/UI/Icons/BigPaperclipIcon.js","components/Attachement/Attachement.jsx","components/Form/Form.jsx","components/SentMessages/SentMessage.jsx","components/SentMessages/SentMessages.jsx","components/UI/Icons/Logo.js","components/App/App.jsx","redux/sender/sender.reducer.js","redux/receiver/receiver.reducer.js","redux/message/message.reducer.js","redux/errors/errors.reducer.js","redux/errors/errors.types.js","redux/attachedFiles/attachedFiles.reducer.js","redux/sentMessage/sentMessage.reducer.js","redux/modal/modal.reducer.js","redux/modal/modal.types.js","redux/submitButton/submitButton.reducer.js","redux/submitButton/submitButton.types.js","redux/rootReducer.js","utils/validationHelpers.js","middleware/inputValidationMiddleware.js","redux/errors/errors.actions.js","middleware/filesValidationMiddleware.js","middleware/submitMessageMiddleware.js","redux/submitButton/submitButton.actions.js","redux/modal/modal.actions.js","middleware/statusUpdateMiddleware.js","redux/store.js","index.js"],"names":["Error","props","error","id","errorMessage","className","data-error","Label","labelText","htmlFor","Field","type","name","value","onChange","placeholder","classNames","mapDispatchToProps","updateSenderName","payload","updateSenderEmail","connect","state","sender","email","errorName","errors","input","senderName","errorEmail","senderEmail","empty","invalid","InputField","updateReceiverName","updateReceiverEmail","receiver","receiverName","receiverEmail","TextareaField","updateMessageSubject","updateMessageText","subject","message","text","errorSubject","errorText","submitMessage","submitButtonState","submitButton","classnames","onClick","disabled","validateFiles","DragDropComponent","drag","DragDrop","dragCounter","dropRef","React","createRef","preventDefaultStopPropagation","e","preventDefault","stopPropagation","handleDrag","handleDragIn","dataTransfer","items","length","setState","handleDragOut","handleDrop","files","clearData","div","this","current","addEventListener","removeEventListener","ref","children","Component","SmallPaperclipIcon","width","height","viewBox","fill","xmlns","fillRule","clipRule","d","typeError","fileSizeError","singleFileSize","totalSizeError","totalFilesSize","multiple","hidden","target","TrashIcon","BigPaperclipIcon","opacity","removeFile","attachedFiles","map","file","index","key","substring","lastIndexOf","modalState","modal","Attachement","updateMessageStatus","statusMessage","date","status","useEffect","timer","setInterval","clearInterval","data-name","sentMessages","sentMessage","sentMessagesExist","Object","keys","values","Logo","cx","cy","r","x","App","initialState","action","persist","totalSize","addTotalSize","forEach","item","size","addFilesState","update","$push","removeFilesState","filter","substractTotalSize","newState","$set","reducerApp","combineReducers","emptyInputValidation","emailValidation","RegExp","test","inputValidationMiddleware","dispatch","getState","next","inputErrors","inputsAreValid","some","filesValidationMiddleware","fileTypes","includes","fileData","fileInfo","reader","FileReader","readAsDataURL","onload","filteredContent","result","indexOf","push","addFiles","submitMessageMiddleware","Sendsay","apiKey","process","request","letter","attaches","sendwhen","mca","then","response","Date","toLocaleString","day","month","addToSent","setTimeout","clearAllFields","statusUpdateMiddleware","res","obj","store","createStore","composeWithDevTools","applyMiddleware","thunk","ReactDOM","render","document","getElementById"],"mappings":"sOAiBeA,EAfD,SAAAC,GAAU,IACdC,EAA4BD,EAA5BC,MAAOC,EAAqBF,EAArBE,GAAIC,EAAiBH,EAAjBG,aACnB,OACE,yBAAKC,UAAU,SACZH,EACC,yBAAKI,aAAYH,EAAIE,UAAU,wCAC5BD,GAGH,yBAAKC,UAAU,2CCERE,EAXD,SAAAN,GAAU,IACdE,EAAkBF,EAAlBE,GAAIK,EAAcP,EAAdO,UACZ,OACE,6BACE,2BAAOH,UAAU,aAAaI,QAASN,GACpCK,K,gBC2BME,EA7BD,SAAAT,GAAU,IAEpBO,EASEP,EATFO,UACAL,EAQEF,EARFE,GACAQ,EAOEV,EAPFU,KACAC,EAMEX,EANFW,KACAC,EAKEZ,EALFY,MACAC,EAIEb,EAJFa,SACAC,EAGEd,EAHFc,YACAb,EAEED,EAFFC,MACAE,EACEH,EADFG,aAEF,OACE,yBAAKC,UAAU,SACb,kBAAC,EAAD,CAAOF,GAAIA,EAAIK,UAAWA,IAC1B,2BACEL,GAAIA,EACJQ,KAAMA,EACNN,UAAWW,IAAW,eAAgB,CAAE,mBAAsBd,IAC9Da,YAAaA,EACbH,KAAMA,EACNC,MAAOA,EACPC,SAAUA,IAEZ,kBAAC,EAAD,CAAOZ,MAAOA,EAAOC,GAAIA,EAAIC,aAAcA,MCqB3Ca,EAAqB,CACzBC,iBCjD8B,SAAAC,GAC9B,MAAO,CACLR,KCJ8B,qBDK9BQ,YD+CFC,kBC3C+B,SAAAD,GAC/B,MAAO,CACLR,KCV+B,sBDW/BQ,aDoDWE,eATS,SAAAC,GACtB,MAAO,CACLV,KAAMU,EAAMC,OAAOX,KACnBY,MAAOF,EAAMC,OAAOC,MACpBC,UAAWH,EAAMI,OAAOC,MAAMC,WAC9BC,WAAYP,EAAMI,OAAOC,MAAMG,eAIKb,EAAzBI,EAxDA,SAAApB,GAAU,IAErBiB,EAMEjB,EANFiB,iBACAE,EAKEnB,EALFmB,kBACAR,EAIEX,EAJFW,KACAY,EAGEvB,EAHFuB,MACAC,EAEExB,EAFFwB,UANoB,EAQlBxB,EADF4B,WAAcE,EAPM,EAONA,MAAOC,EAPD,EAOCA,QAEvB,OACE,yBAAK3B,UAAU,oBACb,kBAAC4B,EAAD,CACEzB,UAAU,wCACVL,GAAG,aACHQ,KAAK,OACLC,KAAK,OACLC,MAAOD,EACPE,SAAUI,EACVH,YAAY,qBACZb,MAAOuB,EACPrB,aAAa,qIAEf,kBAAC6B,EAAD,CACE9B,GAAG,cACHQ,KAAK,QACLC,KAAK,QACLC,MAAOW,EACPV,SAAUM,EACVL,YAAY,QACZb,MAAO6B,GAASC,EAChB5B,aACE2B,EACI,kHACAC,EACA,iFACA,WGORf,EAAqB,CACzBiB,mBCjDgC,SAAAf,GAChC,MAAO,CACLR,KCJgC,uBDKhCQ,YD+CFgB,oBC3CiC,SAAAhB,GACjC,MAAO,CACLR,KCViC,wBDWjCQ,aDoDWE,eATS,SAAAC,GACtB,MAAO,CACLV,KAAMU,EAAMc,SAASxB,KACrBY,MAAOF,EAAMc,SAASZ,MACtBC,UAAWH,EAAMI,OAAOC,MAAMU,aAC9BR,WAAYP,EAAMI,OAAOC,MAAMW,iBAIKrB,EAAzBI,EAxDE,SAAApB,GAAU,IAEvBkC,EAMElC,EANFkC,oBACAD,EAKEjC,EALFiC,mBACAtB,EAIEX,EAJFW,KACAY,EAGEvB,EAHFuB,MACAC,EAEExB,EAFFwB,UANsB,EAQpBxB,EADF4B,WAAcE,EAPQ,EAORA,MAAOC,EAPC,EAODA,QAEvB,OACE,yBAAK3B,UAAU,oBACb,kBAAC4B,EAAD,CACEzB,UAAU,2BACVL,GAAG,eACHQ,KAAK,OACLC,KAAK,OACLC,MAAOD,EACPE,SAAUoB,EACVnB,YAAY,qBACZb,MAAOuB,EACPrB,aAAa,+HAEf,kBAAC6B,EAAD,CACE9B,GAAG,gBACHQ,KAAK,QACLC,KAAK,QACLC,MAAOW,EACPV,SAAUqB,EACVpB,YAAY,QACZb,MAAO6B,GAASC,EAChB5B,aACE2B,EACI,kHACAC,EACA,iFACA,WGVCO,EA5BO,SAAAtC,GAAU,IAE5BO,EAQEP,EARFO,UACAL,EAOEF,EAPFE,GACAQ,EAMEV,EANFU,KACAC,EAKEX,EALFW,KACAC,EAIEZ,EAJFY,MACAC,EAGEb,EAHFa,SACAZ,EAEED,EAFFC,MACAE,EACEH,EADFG,aAGF,OACE,6BACE,kBAAC,EAAD,CAAOD,GAAIA,EAAIK,UAAWA,IAC1B,8BACEH,UAAWW,IAAW,gBAAiB,CAAE,oBAAuBd,IAChEC,GAAIA,EACJQ,KAAMA,EACNC,KAAMA,EACNC,MAAOA,EACPC,SAAUA,IAEZ,kBAAC,EAAD,CAAOZ,MAAOA,EAAOC,GAAIA,EAAIC,aAAcA,MCkB3Ca,EAAqB,CACzBuB,qBC7CkC,SAAArB,GAClC,MAAO,CACLR,KCJkC,yBDKlCQ,YD2CFsB,kBCvC+B,SAAAtB,GAC/B,MAAO,CACLR,KCV+B,sBDW/BQ,aDgDWE,eATS,SAAAC,GACtB,MAAO,CACLoB,QAASpB,EAAMqB,QAAQD,QACvBE,KAAMtB,EAAMqB,QAAQC,KACpBC,aAAcvB,EAAMI,OAAOC,MAAMe,QACjCI,UAAWxB,EAAMI,OAAOC,MAAMiB,QAIM3B,EAAzBI,EAnDC,SAAApB,GAAU,IAEtBuC,EAMEvC,EANFuC,qBACAC,EAKExC,EALFwC,kBACAC,EAIEzC,EAJFyC,QACAE,EAGE3C,EAHF2C,KACAC,EAEE5C,EAFF4C,aACAC,EACE7C,EADF6C,UAEF,OACE,6BACE,yBAAKzC,UAAU,SACb,kBAAC4B,EAAD,CACEzB,UAAU,gEACVL,GAAG,UACHQ,KAAK,OACLC,KAAK,UACLC,MAAO6B,EACP5B,SAAU0B,EACVtC,MAAO2C,EACPzC,aAAa,qFAGjB,kBAAC,EAAD,CACEI,UAAU,yDACVL,GAAG,OACHQ,KAAK,OACLC,KAAK,OACLC,MAAO+B,EACP9B,SAAU2B,EACVvC,MAAO4C,EACP1C,aAAa,kFGZfa,EAAqB,CACzB8B,cC3B2B,SAAA5B,GAC3B,MAAO,CACLR,KCJ0B,iBDK1BQ,aD2BWE,eARS,SAAAC,GACtB,MAAO,CAAE0B,kBAAmB1B,EAAM2B,gBAOIhC,EAAzBI,EA3BA,SAAApB,GAAU,IACf8C,EAAqC9C,EAArC8C,cAAeC,EAAsB/C,EAAtB+C,kBAMvB,OACE,4BACErC,KAAK,yDACLN,UAAW6C,IAAW,SAAU,CAAE,iBAAoBF,IACtDG,QARa,WACfJ,KAQEK,UAAUJ,GAJZ,6D,wCGWSK,EAAgB,SAAAlC,GAC3B,MAAO,CACLR,KCzB0B,iBD0B1BQ,YEPWmC,EAlBW,SAAArD,GACxB,OACE,6BACGA,EAAMsD,MACL,yBAAKlD,UAAU,oBACb,yBAAKA,UAAU,mBACb,uBAAGA,UAAU,mBAAb,mJACA,uBAAGA,UAAU,sBAAb,8XCJNmD,E,2MACJlC,MAAQ,CACNiC,MAAM,G,EAERE,YAAc,K,EAEdC,QAAUC,IAAMC,Y,EAEhBC,8BAAgC,SAAAC,GAC9BA,EAAEC,iBACFD,EAAEE,mB,EAGJC,WAAa,SAAAH,GACX,EAAKD,8BAA8BC,I,EAGrCI,aAAe,SAAAJ,GACb,EAAKD,8BAA8BC,GACnC,EAAKL,cACDK,EAAEK,aAAaC,OAASN,EAAEK,aAAaC,MAAMC,OAAS,GACxD,EAAKC,SAAS,CAAEf,MAAM,K,EAI1BgB,cAAgB,SAAAT,GACd,EAAKD,8BAA8BC,GACnC,EAAKL,cACoB,IAArB,EAAKA,aACP,EAAKa,SAAS,CAAEf,MAAM,K,EAI1BiB,WAAa,SAAAV,GACX,EAAKD,8BAA8BC,GACnC,EAAKQ,SAAS,CAAEf,MAAM,IAFN,IAGRF,EAAkB,EAAKpD,MAAvBoD,cAEJS,EAAEK,aAAaM,OAASX,EAAEK,aAAaM,MAAMJ,OAAS,GACxDhB,EAAcS,EAAEK,aAAaM,OAE/BX,EAAEK,aAAaO,YACf,EAAKjB,YAAc,G,mFAInB,IAAIkB,EAAMC,KAAKlB,QAAQmB,QACvBF,EAAIG,iBAAiB,YAAaF,KAAKV,cACvCS,EAAIG,iBAAiB,YAAaF,KAAKL,eACvCI,EAAIG,iBAAiB,WAAYF,KAAKX,YACtCU,EAAIG,iBAAiB,OAAQF,KAAKJ,c,6CAIlC,IAAIG,EAAMC,KAAKlB,QAAQmB,QACvBF,EAAII,oBAAoB,YAAaH,KAAKV,cAC1CS,EAAII,oBAAoB,YAAaH,KAAKL,eAC1CI,EAAII,oBAAoB,WAAYH,KAAKX,YACzCU,EAAII,oBAAoB,OAAQH,KAAKJ,c,+BAIrC,OACE,yBAAKnE,UAAU,YAAY2E,IAAKJ,KAAKlB,SACnC,kBAAC,EAAD,CAAmBH,KAAMqB,KAAKtD,MAAMiC,OACnCqB,KAAK3E,MAAMgF,c,GAjEGtB,IAAMuB,WAuEvBjE,EAAqB,CACzBoC,iBAGahC,cAAQ,KAAMJ,EAAdI,CAAkCmC,GC3DlC2B,EAnBY,WACzB,OACE,yBACEC,MAAM,KACNC,OAAO,KACPC,QAAQ,YACRC,KAAK,OACLC,MAAM,8BAEN,0BACEC,SAAS,UACTC,SAAS,UACTC,EAAE,4zBACFJ,KAAK,cCqBPtE,EAAqB,CACzBoC,iBAWahC,eARS,SAAAC,GACtB,MAAO,CACLsE,UAAWtE,EAAMI,OAAO+C,MAAM9D,KAC9BkF,cAAevE,EAAMI,OAAO+C,MAAMqB,eAClCC,eAAgBzE,EAAMI,OAAO+C,MAAMuB,kBAIC/E,EAAzBI,EA3CG,SAAApB,GAAU,IAClB2F,EAA6C3F,EAA7C2F,UAAWC,EAAkC5F,EAAlC4F,cAAeE,EAAmB9F,EAAnB8F,eAClC,OACE,yBAAK1F,UAAU,cACb,2BAAOI,QAAQ,OAAOJ,UAAU,qBAC9B,kBAAC,EAAD,MACA,yBAAKA,UAAU,0BAAf,0FAEF,2BACEM,KAAK,OACLR,GAAG,OACHS,KAAK,OACLqF,UAAQ,EACRC,QAAM,EACNpF,SAAU,SAAAgD,GAAC,OAAI7D,EAAMoD,cAAcS,EAAEqC,OAAO1B,UAE9C,yBAAKpE,UAAU,6BACb,yBAAKC,aAAW,QAAQsF,EAAY,sJAAgC,MACpE,yBAAKtF,aAAW,kBACbuF,EAAgB,kOAAgD,MAEnE,yBAAKvF,aAAW,aACbyF,EACG,mOACA,WCLC1E,eAPS,SAAAC,GACtB,MAAO,CACLE,MAAOF,EAAMc,SAASZ,SAKc,KAAzBH,EArBD,SAAApB,GACZ,OACE,yBAAKI,UAAU,SACb,yBAAKA,UAAU,iBAAf,uOAGA,yBAAKA,UAAU,kBAAf,4cAEoBJ,EAAMuB,MAF1B,yIC0CS4E,EAjDG,WAChB,OACE,yBACEhB,MAAM,KACNC,OAAO,KACPC,QAAQ,YACRC,KAAK,OACLC,MAAM,8BAEN,0BACEC,SAAS,UACTC,SAAS,UACTC,EAAE,iBACFJ,KAAK,YAEP,0BACEE,SAAS,UACTC,SAAS,UACTC,EAAE,iBACFJ,KAAK,YAEP,0BACEE,SAAS,UACTC,SAAS,UACTC,EAAE,iBACFJ,KAAK,YAEP,0BACEE,SAAS,UACTC,SAAS,UACTC,EAAE,iBACFJ,KAAK,YAEP,0BACEE,SAAS,UACTC,SAAS,UACTC,EAAE,+PACFJ,KAAK,YAEP,0BACEE,SAAS,UACTC,SAAS,UACTC,EAAE,kRACFJ,KAAK,cCtBEc,EArBU,WACvB,OACE,yBACEjB,MAAM,KACNC,OAAO,KACPC,QAAQ,YACRC,KAAK,OACLC,MAAM,8BAEN,uBAAGc,QAAQ,OACT,0BACEb,SAAS,UACTC,SAAS,UACTC,EAAE,2xBACFJ,KAAK,aCoBTtE,EAAqB,CACzBsF,WTNwB,SAAApF,GACxB,MAAO,CACLR,KC/BuB,cDgCvBQ,aSYWE,eANS,SAAAC,GACtB,MAAO,CACLmD,MAAOnD,EAAMkF,cAAc/B,SAISxD,EAAzBI,EAxCO,SAAApB,GAAU,IACtBwE,EAAsBxE,EAAtBwE,MAAO8B,EAAetG,EAAfsG,WACf,OACE,yBAAKlG,UAAU,qBACZoE,EAAMgC,KAAI,SAACC,EAAMC,GAAP,OACT,yBAAKtG,UAAU,oBAAoBuG,IAAKD,GACtC,yBAAKtG,UAAU,qBACf,kBAAC,EAAD,OAEA,yBAAKA,UAAU,qBACb,yBAAKA,UAAU,0BACZqG,EAAK9F,KAAKiG,UAAU,EAAGH,EAAK9F,KAAKkG,YAAY,OAEhD,wCAAUJ,EAAK9F,KAAKiG,UAClBH,EAAK9F,KAAKkG,YAAY,KAAO,MAGjC,yBACEzG,UAAU,sBACV8C,QAAS,kBAAMoD,EAAWG,KAE1B,kBAAC,EAAD,MACA,0BAAMrG,UAAU,6BAAhB,uDCWGgB,eANS,SAAAC,GACtB,MAAO,CACLyF,WAAYzF,EAAM0F,SAIkB,KAAzB3F,EA5BF,SAAApB,GACX,OACE,yBAAKI,UAAU,cACb,yBAAKA,UAAU,yBACZJ,EAAM8G,WACL,kBAAC,EAAD,MAEA,kBAAC,EAAD,KACE,yBAAK1G,UAAU,UAAf,6HACA,kBAAC,EAAD,MACA,kBAAC,EAAD,MACA,kBAAC,EAAD,MACA,kBAAC4G,EAAD,MACA,kBAAC,EAAD,MACA,kBAAC,EAAD,YC6BNhG,EAAqB,CACzBiG,oBb9BiC,SAAA/F,GACjC,MAAO,CACLR,KC1BiC,wBD2BjCQ,aa8BWE,cAAQ,KAAMJ,EAAdI,EApDK,SAAApB,GAAU,IAGxBkH,EAHuB,EACWlH,EAAM0C,QAApCxC,EADmB,EACnBA,GAAIiH,EADe,EACfA,KAAM1E,EADS,EACTA,QAAS2E,EADA,EACAA,OACnBH,EAAwBjH,EAAxBiH,oBAuBR,OApBgB,IAAZG,IACFF,EAAgB,gEAEdE,GAAU,IACZF,EAAgB,qDAGdE,GAAU,IACZF,EAAgB,wCAElBG,qBAAU,WACR,GAAID,GAAU,EAAG,CACf,IAAIE,EAAQC,aAAY,WACtBN,EAAoB/G,KACnB,KACH,OAAO,WACLsH,cAAcF,QAKlB,yBAAKlH,UAAU,cACb,yBAAKqH,YAAU,OAAOrH,UAAU,cAC7B+G,GAEH,yBAAKM,YAAU,UAAUrH,UAAU,iBAChCqC,GAEH,yBACEgF,YAAU,SACVrH,UAAW6C,IACT,eACA,CAAE,sBAAoC,IAAZmE,GAC1B,CAAE,qBAAwBA,GAAU,GACpC,CAAE,mBAAsBA,GAAU,KAGnCF,OCRM9F,eANS,SAAAC,GACtB,MAAO,CACLqG,aAAcrG,EAAMsG,eAIgB,KAAzBvG,EAnCM,SAAApB,GAAU,IACrB0H,EAAiB1H,EAAjB0H,aACFE,EAAoBC,OAAOC,KAAKJ,GAActD,OAEpD,OACE,yBAAKhE,UAAU,cACb,yBAAKA,UAAU,gBAAf,mIACA,yBACEA,UAAWW,IAAW,oBAAqB,CACzC,+BAAgC6G,KAGlC,yBAAKxH,UAAU,cAAf,4BACA,yBAAKA,UAAU,iBAAf,4BACA,yBAAKA,UAAU,gBAAf,yCAEF,yBAAKA,UAAU,eACZwH,EACCC,OAAOE,OAAOL,GAAclB,KAAI,SAAA9D,GAAO,OACrC,kBAAC,EAAD,CAAaiE,IAAKjE,EAAQxC,GAAIwC,QAASA,OAGzC,qMCRKsF,EAjBF,WACX,OACE,yBACE7C,MAAM,MACNC,OAAO,KACPC,QAAQ,aACRC,KAAK,OACLC,MAAM,8BAEN,4BAAQ0C,GAAG,KAAKC,GAAG,KAAKC,EAAE,KAAK7C,KAAK,YACpC,4BAAQ2C,GAAG,MAAMC,GAAG,KAAKC,EAAE,KAAK7C,KAAK,YACrC,0BAAM8C,EAAE,KAAKjD,MAAM,KAAKC,OAAO,KAAKE,KAAK,YACzC,0BAAMI,EAAE,+BAA+BJ,KAAK,cCCnC+C,EAVH,WACV,OACE,yBAAKjI,UAAU,aACb,kBAAC,EAAD,MACA,kBAAC,EAAD,MACA,kBAAC,EAAD,Q,qBCRAkI,EAAe,CACnB3H,KAAM,GACNY,MAAO,IAmBMD,EAhBA,WAAmC,IAAlCD,EAAiC,uDAAzBiH,EAAcC,EAAW,uCAC/C,OAAQA,EAAO7H,MACb,I1BT8B,qB0BU9B,I1BT+B,sB0BW7B,OADA6H,EAAOrH,QAAQsH,UACR,eACFnH,EADL,eAEGkH,EAAOrH,QAAQgF,OAAOvF,KAAO4H,EAAOrH,QAAQgF,OAAOtF,QAExD,I1BdwB,e0BetB,OAAO,eAAIS,EAAX,GAAqBiH,GACvB,QACE,OAAOjH,ICjBPiH,EAAe,CACnB3H,KAAM,GACNY,MAAO,IAmBMY,EAhBE,WAAmC,IAAlCd,EAAiC,uDAAzBiH,EAAcC,EAAW,uCACjD,OAAQA,EAAO7H,MACb,IxBTgC,uBwBUhC,IxBTiC,wBwBW/B,OADA6H,EAAOrH,QAAQsH,UACR,eACFnH,EADL,eAEGkH,EAAOrH,QAAQgF,OAAOvF,KAAO4H,EAAOrH,QAAQgF,OAAOtF,QAExD,IxBd0B,iBwBexB,OAAO,eAAIS,EAAX,GAAqBiH,GACvB,QACE,OAAOjH,ICjBPiH,EAAe,CACnB7F,QAAS,GACTE,KAAM,IAmBOD,GAhBC,WAAmC,IAAlCrB,EAAiC,uDAAzBiH,EAAcC,EAAW,uCAChD,OAAQA,EAAO7H,MACb,IrBTkC,yBqBUlC,IrBT+B,sBqBW7B,OADA6H,EAAOrH,QAAQsH,UACR,eACFnH,EADL,eAEGkH,EAAOrH,QAAQgF,OAAOvF,KAAO4H,EAAOrH,QAAQgF,OAAOtF,QAExD,IrBdyB,gBqBevB,OAAO,eAAIS,EAAX,GAAqBiH,GACvB,QACE,OAAOjH,ICjBPiH,GAAe,CACnB5G,MAAO,CACLC,YAAY,EACZE,YAAa,CACXC,OAAO,EACPC,SAAS,GAEXK,cAAc,EACdC,cAAe,CACbP,OAAO,EACPC,SAAS,GAEXU,SAAS,EACTC,SAAS,GAEX8B,MAAO,CACL9D,MAAM,EACNmF,gBAAgB,EAChBE,gBAAgB,IAiBLtE,GAbA,WAAmC,IAAlCJ,EAAiC,uDAAzBiH,GAAcC,EAAW,uCAC/C,OAAQA,EAAO7H,MACb,IC1BgC,uBD2BhC,IC1B+B,sBD2B7B,OAAO,eACFW,EADL,GAEKkH,EAAOrH,SAEd,QACE,OAAOG,I,oBExBPiH,GAAe,CACnB9D,MAAO,GACPiE,UAAW,MAiCElC,GA9BO,WAAmC,IAAlClF,EAAiC,uDAAzBiH,GAAcC,EAAW,uCACtD,OAAQA,EAAO7H,MACb,InBf0B,iBmBgBxB,OAAOW,EACT,InBlBqB,YmBmBnB,IAAIqH,EAAerH,EAAMoH,UACzBF,EAAOrH,QAAQyH,SAAQ,SAAAC,GAAI,OAAKF,GAAgBE,EAAKC,QACrD,IAAMC,EAAgB,CACpBtE,MAAOuE,KAAO1H,EAAMmD,MAAO,CAAEwE,MAAOT,EAAOrH,UAC3CuH,UAAWC,GAEb,OAAO,eAAKrH,EAAZ,GAAsByH,GACxB,InBxBuB,cmByBrB,IAAMG,EAAmB5H,EAAMmD,MAAM0E,QACnC,SAAAzC,GAAI,OAAIA,EAAK9F,OAAS4H,EAAOrH,QAAQP,QAEnCwI,EAAqB,KACzBF,EAAiBN,SAAQ,SAAAlC,GAAI,OAAK0C,GAAsB1C,EAAKoC,QAC7D,IAAMO,EAAW,CACf5E,MAAOuE,KAAO1H,EAAMmD,MAAO,CAAE6E,KAAMJ,IACnCR,UAAWU,GAEb,OAAO,eAAK9H,EAAZ,GAAsB+H,GACxB,InBlCuB,cmBmCrB,OAAO,eAAK/H,EAAZ,GAAsBiH,IACxB,QACE,OAAOjH,ICNEsG,GA3BK,WAAyB,IAAxBtG,EAAuB,uDAAf,GAAIkH,EAAW,uCAC1C,OAAQA,EAAO7H,MACb,ItBT0B,iBsBU1B,ItBTiC,wBsBU/B,OAAOW,EACT,ItBVuB,csBWrB,IAAM+H,EAAQ,eACXb,EAAOrH,QAAQhB,GAAK,CACrBA,GAAIqI,EAAOrH,QAAQhB,GACnBuC,QAAS8F,EAAOrH,QAAQuB,QACxB0E,KAAMoB,EAAOrH,QAAQiG,KACrBC,OAAQ,OAEV,OAAO,eAAI/F,EAAX,GAAqB+H,GACvB,ItBlB0B,iBsBmBxB,OAAO,eACF/H,EADL,eAEGkH,EAAOrH,QAAQhB,GAFlB,eAGOmB,EAAMkH,EAAOrH,QAAQhB,IAH5B,CAIIkH,QAASmB,EAAOrH,QAAQkG,WAG9B,QACE,OAAO/F,ICnBE0F,GATD,WAA4B,IAA3B1F,EAA0B,wDAAXkH,EAAW,uCACvC,OAAQA,EAAO7H,MACb,ICJwB,eDKtB,OAAQW,EACV,QACE,OAAOA,IEIE2B,GATM,WAA2B,IAA1B3B,IAAyB,yDAAXkH,EAAW,uCAC7C,OAAQA,EAAO7H,MACb,ICJgC,uBDK9B,OAAQW,EACV,QACE,OAAOA,IEcEiI,GAXIC,0BAAgB,CACjCjI,SACAa,WACAO,WACAjB,UACA8E,iBACAoB,eACAZ,SACA/D,kB,kBClBWwG,GAAuB,SAAA9H,GAClC,OAAQA,EAAM0C,OAAS,GAGZqF,GAAkB,SAAA/H,GAI7B,OAH6B,IAAIgI,OAC/B,mDAE2BC,KAAKjI,IC8CrBkI,GA/CmB,SAAC,GAAD,IAChCC,EADgC,EAChCA,SACAC,EAFgC,EAEhCA,SAFgC,OAG5B,SAAAC,GAAI,OAAI,SAAAxB,GACZ,G7BX4B,mB6BWxBA,EAAO7H,KACT,OAAOqJ,EAAKxB,GAFQ,MASlBuB,IATkB,IAMpBxI,OAAgBK,EANI,EAMVhB,KAAyBkB,EANf,EAMQN,MANR,IAOpBY,SAAkBC,EAPE,EAORzB,KAA2B0B,EAPnB,EAOYd,MAPZ,IAQpBmB,QAAWD,EARS,EAQTA,QAASE,EARA,EAQAA,KAGhBqH,EAAc,CAClBtI,MAAO,CACLC,WAAY6H,GAAqB7H,GACjCE,YAAa,CACXC,MAAO0H,GAAqB3H,GAC5BE,QAAS0H,GAAgB5H,IAE3BO,aAAcoH,GAAqBpH,GACnCC,cAAe,CACbP,MAAO0H,GAAqBnH,GAC5BN,QAAS0H,GAAgBpH,IAE3BI,QAAS+G,GAAqB/G,GAC9BE,KAAM6G,GAAqB7G,KAa/BkH,EC5CO,CACLnJ,KVJgC,uBUKhCQ,QD0C0B8I,IATL,SAAjBC,EAAiBxI,GACrB,OAAOoG,OAAOE,OAAOtG,GAAQyI,MAAK,SAAAtJ,GAChC,MAAqB,kBAAVA,EACFqJ,EAAerJ,GAEjBA,KAMNqJ,CAAeD,EAAYtI,QAC9BqI,EAAKxB,MEGM4B,GAjDmB,SAAC,GAAD,IAAGN,EAAH,EAAGA,SAAUC,EAAb,EAAaA,SAAb,OAA4B,SAAAC,GAAI,OAAI,SAAAxB,GACpE,G7BJ4B,mB6BIxBA,EAAO7H,KACT,OAAOqJ,EAAKxB,GAGd,IAAM9G,EAAS,CACb+C,MAAO,IAEH4F,EAAY,CAChB,MACA,OACA,MACA,MACA,MACA,MACA,OACA,MACA,OACA,OAEmB3B,EAAeqB,IAA/BvD,cAAgBkC,UACjB1C,EAAiB,KArByD,uBAsB9E,YAAiBwC,EAAOrH,QAAxB,+CAAiC,CAAC,IAAzBuF,EAAwB,QAC/BV,GAAkBU,EAAKoC,KAEpBuB,EAAUC,SAAS5D,EAAK9F,KAAKiG,UAAUH,EAAK9F,KAAKkG,YAAY,KAAO,IAG5DJ,EAAKoC,KAAO,QACrBpH,EAAO+C,MAAMqB,gBAAiB,EACpB4C,EAAYhC,EAAKoC,KAAO,WAClCpH,EAAO+C,MAAMuB,gBAAiB,GAJ9BtE,EAAO+C,MAAM9D,MAAO,GA3BsD,kFAkCzEqF,EAAiB,WAClBtE,EAAO+C,MAAMuB,gBAAiB,GAKlC8D,EDlCO,CACLnJ,KVV+B,sBUW/BQ,QCgCyBO,IAEtBoG,OAAOC,KAAKrG,EAAO+C,OAAOJ,QAC7ByF,E9B7CoB,SAAA3I,GACtB,IAAMoJ,EAAW,GADgB,uBAEjC,IAFiC,IAEjC,EAFiC,iBAExB7D,EAFwB,QAGzB8D,EAAW,GACjBA,EAAQ,KAAW9D,EAAK9F,KACxB,IAAM6J,EAAS,IAAIC,WACnBD,EAAOE,cAAcjE,GACrB+D,EAAOG,OAAS,WACd,IAAMC,EAAkBJ,EAAOK,OAAOjE,UAAU4D,EAAOK,OAAOC,QAAQ,KAAK,GAC3EP,EAAQ,QAAcK,GAGxBL,EAAQ,SAAe,SACvBA,EAAQ,KAAW9D,EAAKoC,KACxByB,EAASS,KAAKR,IAZhB,EAAiBrJ,EAAjB,+CAA2B,IAFM,kFAgBjC,MAAO,CACLR,KCnBqB,YDoBrBQ,QAASoJ,G8B2BAU,CAASzC,EAAOrH,UAG3B6I,EAAKxB,M,4BCOQ0C,GA/CiB,SAAC,GAAD,IAAGpB,EAAH,EAAGA,SAAUC,EAAb,EAAaA,SAAb,OAA4B,SAAAC,GAAI,OAAI,SAAAxB,GAClE,GhCX4B,mBgCWxBA,EAAO7H,KACT,OAAOqJ,EAAKxB,GAF8D,MAUxEuB,IAVwE,IAM1ExI,OAAgBK,EAN0D,EAMhEhB,KAAyBkB,EANuC,EAM9CN,MAN8C,IAO1EY,SAAkBC,EAPwD,EAO9DzB,KAA2B0B,EAPmC,EAO1Cd,MAP0C,IAQ1EmB,QAAWD,EAR+D,EAQ/DA,QAASE,EARsD,EAQtDA,KACH6B,EATyD,EAS1E+B,cAAiB/B,MAGH,IAAI0G,KAAQ,CAAEC,OAAQC,wEAGnCC,QAAQ,CACP9C,OAAQ,kBACR+C,OAAQ,CACN7I,QAASA,EACT,YAAad,EACb,aAAcE,EACd,UAAWO,EACXM,QAAS,CAAEC,KAAMA,GACjB4I,SAAS,aAAK/G,IAEhBgH,SAAU,OACVC,IAAK,CAACpJ,KAEPqJ,MAAK,SAAAC,GACJ9B,ECpCK,CACLnJ,KPJ8B,yBMwC9BmJ,EErCG,CACLnJ,KVJwB,iBQyCtBmJ,EjChCmB,SAAC,GAUxB,MAAO,CACLnJ,KClBuB,cDmBvBQ,QAPc,CACZhB,GANsC,EAAjBA,GAOrBuC,QAPsC,EAAbA,QAQzB0E,MAPS,IAAIyE,MAAOC,eAAe,KAAM,CAC3CC,IAAK,UACLC,MAAO,WiC6BIC,CAAU,CAAE9L,GAAIyL,EAAS,YAAalJ,QAASA,KACxDwJ,YAAW,kBAAMpC,EAASqC,OAAmB,QAGjDnC,EAAKxB,GAEL,IAAM2D,EAAiB,kBAAM,SAAArC,GAC3BA,EC7CO,CACLnJ,KPJ8B,yBMiDhCmJ,E/BVK,CACLnJ,KCrCuB,gB8B+CvBmJ,EE/CK,CACLnJ,KVJwB,iBQmDxBmJ,EpClCK,CACLnJ,KChByB,kBmCkDzBmJ,ExCnCK,CACLnJ,KChB0B,mBuCmD1BmJ,E3CpCK,CACLnJ,KChBwB,sB6C4BbyL,GA1BgB,SAAC,GAAD,IAAGtC,EAAH,EAAGA,SAAH,OAAkB,SAAAE,GAAI,OAAI,SAAAxB,GACvD,GnCJmC,0BmCI/BA,EAAO7H,KACT,OAAOqJ,EAAKxB,GAGE,IAAI2C,KAAQ,CAC1BC,OAAQC,wEAIPC,QAAQ,CACP9C,OAAQ,YACRrI,GAAIqI,EAAOrH,UAEZwK,MAAK,SAAAU,GACJvC,EpCcG,CACLnJ,KC/B0B,iBDgC1BQ,QoCfiB,CACXhB,GAAIqI,EAAOrH,QACXkG,OAAQgF,EAAIC,IAAIjF,aAKxB2C,EAAKxB,MCLQ+D,GAbDC,sBACZjD,GACAkD,+BACEC,0BACE7C,GACAO,GACAc,GACAkB,GACAO,QCTNC,IAASC,OACP,kBAAC,IAAD,CAAUN,MAAOA,IACf,kBAAC,EAAD,OAEFO,SAASC,eAAe,W","file":"static/js/main.fee6b48e.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nconst Error = props => {\r\n  const { error, id, errorMessage } = props\r\n  return (\r\n    <div className=\"error\">\r\n      {error ? (\r\n        <div data-error={id} className=\"error__message error__message_active\">\r\n          {errorMessage}\r\n        </div>\r\n      ) : (\r\n        <div className=\"error__message error__message_hidden\"></div>\r\n      )}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Error\r\n","import React from 'react'\r\n\r\nconst Label = props => {\r\n  const { id, labelText } = props\r\n  return (\r\n    <div>\r\n      <label className=\"label mb-5\" htmlFor={id}>\r\n        {labelText}\r\n      </label>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Label\r\n","import React from 'react'\r\nimport Error from '../Error/Error'\r\nimport Label from '../Label/Label'\r\nimport classNames from 'classnames'\r\n\r\nconst Field = props => {\r\n  const {\r\n    labelText,\r\n    id,\r\n    type,\r\n    name,\r\n    value,\r\n    onChange,\r\n    placeholder,\r\n    error,\r\n    errorMessage,\r\n  } = props\r\n  return (\r\n    <div className=\"field\">\r\n      <Label id={id} labelText={labelText} />\r\n      <input\r\n        id={id}\r\n        type={type}\r\n        className={classNames('field__input', { 'field__input_error': error })}\r\n        placeholder={placeholder}\r\n        name={name}\r\n        value={value}\r\n        onChange={onChange}\r\n      />\r\n      <Error error={error} id={id} errorMessage={errorMessage} />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Field\r\n","import React from 'react'\r\nimport InputField from '../UI/InputField/InputField'\r\nimport { connect } from 'react-redux'\r\nimport {\r\n  updateSenderName,\r\n  updateSenderEmail,\r\n} from '../../redux/sender/sender.actions'\r\n\r\nconst Sender = props => {\r\n  const {\r\n    updateSenderName,\r\n    updateSenderEmail,\r\n    name,\r\n    email,\r\n    errorName,\r\n    errorEmail: { empty, invalid },\r\n  } = props\r\n  return (\r\n    <div className=\"field-group mb-5\">\r\n      <InputField\r\n        labelText=\"От кого\"\r\n        id=\"senderName\"\r\n        type=\"text\"\r\n        name=\"name\"\r\n        value={name}\r\n        onChange={updateSenderName}\r\n        placeholder=\"Имя\"\r\n        error={errorName}\r\n        errorMessage=\"Введите имя отправителя\"\r\n      />\r\n      <InputField\r\n        id=\"senderEmail\"\r\n        type=\"email\"\r\n        name=\"email\"\r\n        value={email}\r\n        onChange={updateSenderEmail}\r\n        placeholder=\"Email\"\r\n        error={empty || invalid}\r\n        errorMessage={\r\n          empty\r\n            ? 'Email не может быть пустым'\r\n            : invalid\r\n            ? 'Некорректный email'\r\n            : null\r\n        }\r\n      />\r\n    </div>\r\n  )\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n  updateSenderName,\r\n  updateSenderEmail,\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    name: state.sender.name,\r\n    email: state.sender.email,\r\n    errorName: state.errors.input.senderName,\r\n    errorEmail: state.errors.input.senderEmail,\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Sender)\r\n","import * as types from './sender.types'\r\n\r\nexport const updateSenderName = payload => {\r\n  return {\r\n    type: types.UPDATE_SENDER_NAME,\r\n    payload,\r\n  }\r\n}\r\n\r\nexport const updateSenderEmail = payload => {\r\n  return {\r\n    type: types.UPDATE_SENDER_EMAIL,\r\n    payload,\r\n  }\r\n}\r\n\r\nexport const clearSender = () => {\r\n  return {\r\n    type: types.CLEAR_SENDER,\r\n  }\r\n}\r\n","export const UPDATE_SENDER_NAME = 'UPDATE_SENDER_NAME'\r\nexport const UPDATE_SENDER_EMAIL = 'UPDATE_SENDER_EMAIL'\r\nexport const CLEAR_SENDER = 'CLEAR_SENDER' ","import React from 'react'\r\nimport InputField from '../UI/InputField/InputField'\r\nimport { connect } from 'react-redux'\r\nimport {\r\n  updateReceiverName,\r\n  updateReceiverEmail,\r\n} from '../../redux/receiver/receiver.actions'\r\n\r\nconst Receiver = props => {\r\n  const {\r\n    updateReceiverEmail,\r\n    updateReceiverName,\r\n    name,\r\n    email,\r\n    errorName,\r\n    errorEmail: { empty, invalid },\r\n  } = props\r\n  return (\r\n    <div className=\"field-group mb-5\">\r\n      <InputField\r\n        labelText=\"Кому\"\r\n        id=\"receiverName\"\r\n        type=\"text\"\r\n        name=\"name\"\r\n        value={name}\r\n        onChange={updateReceiverName}\r\n        placeholder=\"Имя\"\r\n        error={errorName}\r\n        errorMessage=\"Введите имя получателя\"\r\n      />\r\n      <InputField\r\n        id=\"receiverEmail\"\r\n        type=\"email\"\r\n        name=\"email\"\r\n        value={email}\r\n        onChange={updateReceiverEmail}\r\n        placeholder=\"Email\"\r\n        error={empty || invalid}\r\n        errorMessage={\r\n          empty\r\n            ? 'Email не может быть пустым'\r\n            : invalid\r\n            ? 'Некорректный email'\r\n            : null\r\n        }\r\n      />\r\n    </div>\r\n  )\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n  updateReceiverName,\r\n  updateReceiverEmail,\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    name: state.receiver.name,\r\n    email: state.receiver.email,\r\n    errorName: state.errors.input.receiverName,\r\n    errorEmail: state.errors.input.receiverEmail,\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Receiver)\r\n","import * as types from './receiver.types'\r\n\r\nexport const updateReceiverName = payload => {\r\n  return {\r\n    type: types.UPDATE_RECEIVER_NAME,\r\n    payload,\r\n  }\r\n}\r\n\r\nexport const updateReceiverEmail = payload => {\r\n  return {\r\n    type: types.UPDATE_RECEIVER_EMAIL,\r\n    payload,\r\n  }\r\n}\r\n\r\nexport const clearReceiver = () => {\r\n  return {\r\n    type: types.CLEAR_RECEIVER,\r\n  }\r\n}\r\n","export const UPDATE_RECEIVER_NAME = 'UPDATE_RECEIVER_NAME'\r\nexport const UPDATE_RECEIVER_EMAIL = 'UPDATE_RECEIVER_EMAIL'\r\nexport const CLEAR_RECEIVER = 'CLEAR_RECEIVER' \r\n","import React from 'react'\r\nimport Error from '../Error/Error'\r\nimport Label from '../Label/Label'\r\nimport classNames from 'classnames'\r\n\r\nconst TextareaField = props => {\r\n  const {\r\n    labelText,\r\n    id,\r\n    type,\r\n    name,\r\n    value,\r\n    onChange,\r\n    error,\r\n    errorMessage,\r\n  } = props\r\n\r\n  return (\r\n    <div>\r\n      <Label id={id} labelText={labelText} />\r\n      <textarea\r\n        className={classNames('message__text', { 'message__text_error': error })}\r\n        id={id}\r\n        type={type}\r\n        name={name}\r\n        value={value}\r\n        onChange={onChange}\r\n      ></textarea>\r\n      <Error error={error} id={id} errorMessage={errorMessage} />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default TextareaField\r\n","import React from 'react'\r\nimport InputField from '../UI/InputField/InputField'\r\nimport TextareaField from '../UI/TextareaField/TextareaField'\r\nimport { connect } from 'react-redux'\r\nimport {\r\n  updateMessageSubject,\r\n  updateMessageText,\r\n} from '../../redux/message/message.actions'\r\n\r\nconst Message = props => {\r\n  const {\r\n    updateMessageSubject,\r\n    updateMessageText,\r\n    subject,\r\n    text,\r\n    errorSubject,\r\n    errorText,\r\n  } = props\r\n  return (\r\n    <div>\r\n      <div className=\"mb-20\">\r\n        <InputField\r\n          labelText=\"Тема письма\"\r\n          id=\"subject\"\r\n          type=\"text\"\r\n          name=\"subject\"\r\n          value={subject}\r\n          onChange={updateMessageSubject}\r\n          error={errorSubject}\r\n          errorMessage=\"Заполните тему\"\r\n        />\r\n      </div>\r\n      <TextareaField\r\n        labelText=\"Сообщение\"\r\n        id=\"text\"\r\n        type=\"text\"\r\n        name=\"text\"\r\n        value={text}\r\n        onChange={updateMessageText}\r\n        error={errorText}\r\n        errorMessage=\"Введите текст\"\r\n      />\r\n    </div>\r\n  )\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n  updateMessageSubject,\r\n  updateMessageText,\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    subject: state.message.subject,\r\n    text: state.message.text,\r\n    errorSubject: state.errors.input.subject,\r\n    errorText: state.errors.input.text,\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Message)\r\n","import * as types  from './message.types'\r\n\r\nexport const updateMessageSubject = payload => {\r\n  return {\r\n    type: types.UPDATE_MESSAGE_SUBJECT,\r\n    payload,\r\n  }\r\n}\r\n\r\nexport const updateMessageText = payload => {\r\n  return {\r\n    type: types.UPDATE_MESSAGE_TEXT,\r\n    payload,\r\n  }\r\n}\r\n\r\nexport const clearMessage = () => {\r\n  return {\r\n    type: types.CLEAR_MESSAGE,\r\n  }\r\n}","export const UPDATE_MESSAGE_SUBJECT = 'UPDATE_MESSAGE_SUBJECT'\r\nexport const UPDATE_MESSAGE_TEXT = 'UPDATE_MESSAGE_TEXT'\r\nexport const CLEAR_MESSAGE = 'CLEAR_MESSAGE'\r\n","import React from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { submitMessage } from '../../redux/sentMessage/sentMessage.actions'\r\nimport classnames from 'classnames'\r\n\r\nconst Submit = props => {\r\n  const { submitMessage, submitButtonState } = props\r\n\r\n  const onSubmit = () => {\r\n    submitMessage()\r\n  }\r\n\r\n  return (\r\n    <button\r\n      type=\"Отправить\"\r\n      className={classnames('submit', { 'submit_disabled': !submitButtonState })}\r\n      onClick={onSubmit}\r\n      disabled={submitButtonState ? false : true}\r\n    >\r\n      Отправить\r\n    </button>\r\n  )\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return { submitButtonState: state.submitButton }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n  submitMessage,\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Submit)\r\n","import { SUBMIT_MESSAGE, ADD_TO_SENT, UPDATE_MESSAGE_STATUS, UPDATE__STATUS } from './sentMessage.types'\r\n\r\nexport const submitMessage = payload => {\r\n  return {\r\n    type: SUBMIT_MESSAGE,\r\n    payload,\r\n  }\r\n}\r\n\r\nexport const addToSent = ({id, subject}) => {\r\n  const date = new Date().toLocaleString('ru', {\r\n    day: '2-digit',\r\n    month: 'long',\r\n  })\r\n  const payload = {\r\n      id: id,\r\n      subject: subject,\r\n      date: date,\r\n  }\r\n  return {\r\n    type: ADD_TO_SENT,\r\n    payload,\r\n  }\r\n}\r\n\r\nexport const updateMessageStatus = payload => {\r\n  return {\r\n    type: UPDATE_MESSAGE_STATUS,\r\n    payload\r\n  }\r\n}\r\n\r\nexport const updateStatus = payload => {\r\n  return {\r\n    type: UPDATE__STATUS,\r\n    payload\r\n  }\r\n}\r\n","export const SUBMIT_MESSAGE = 'SUBMIT_MESSAGE'\r\nexport const UPDATE_MESSAGE_STATUS = 'UPDATE_MESSAGE_STATUS'\r\nexport const ADD_TO_SENT = 'ADD_TO_SENT'\r\nexport const UPDATE__STATUS = 'UPDATE__STATUS'","import { ADD_FILES, VALIDATE_FILES, REMOVE_FILE, CLEAR_FILES } from './attachedFiles.types'\r\n\r\nexport const addFiles = payload => {\r\n  const fileData = []\r\n  for (let file of payload) {\r\n    const fileInfo = {}\r\n    fileInfo['name'] = file.name\r\n    const reader = new FileReader()\r\n    reader.readAsDataURL(file)\r\n    reader.onload = () => {\r\n      const filteredContent = reader.result.substring(reader.result.indexOf(',')+1)\r\n      fileInfo['content'] = filteredContent\r\n    }\r\n\r\n    fileInfo['encoding'] = 'base64'\r\n    fileInfo['size'] = file.size\r\n    fileData.push(fileInfo)\r\n  }\r\n  return {\r\n    type: ADD_FILES,\r\n    payload: fileData,\r\n  }\r\n}\r\n\r\nexport const validateFiles = payload => {\r\n  return {\r\n    type: VALIDATE_FILES,\r\n    payload\r\n  }\r\n}\r\n\r\nexport const removeFile = payload => {\r\n  return {\r\n    type: REMOVE_FILE,\r\n    payload,\r\n  }\r\n}\r\n\r\nexport const clearAttachedFiles = () => {\r\n  return {\r\n    type: CLEAR_FILES,\r\n  }\r\n}\r\n","export const ADD_FILES = 'ADD_FILES'\r\nexport const VALIDATE_FILES = 'VALIDATE_FILES'\r\nexport const REMOVE_FILE = 'REMOVE_FILE'\r\nexport const CLEAR_FILES = 'CLEAR_FILES'","import React from 'react'\r\n\r\nconst DragDropComponent = props => {\r\n  return (\r\n    <div>\r\n      {props.drag && (\r\n        <div className=\"drag-drop__cover\">\r\n          <div className=\"drag-drop__info\">\r\n            <p className=\"drag-drop__text\">Бросайте файлы сюда, я ловлю</p>\r\n            <p className=\"drag-drop__message\">\r\n              Мы принимаем картинки (jpg, png, gif), офисные файлы (doc, xls,\r\n              pdf) и zip-архивы. Размеры файла до 5 МБ\r\n            </p>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default DragDropComponent\r\n","import React from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { validateFiles } from '../../redux/attachedFiles/attachedFiles.actions'\r\nimport DragDropComponent from './DragDropComponent'\r\n\r\nclass DragDrop extends React.Component {\r\n  state = {\r\n    drag: false,\r\n  }\r\n  dragCounter = null\r\n\r\n  dropRef = React.createRef()\r\n\r\n  preventDefaultStopPropagation = e => {\r\n    e.preventDefault()\r\n    e.stopPropagation()\r\n  }\r\n\r\n  handleDrag = e => {\r\n    this.preventDefaultStopPropagation(e)\r\n  }\r\n\r\n  handleDragIn = e => {\r\n    this.preventDefaultStopPropagation(e)\r\n    this.dragCounter++\r\n    if (e.dataTransfer.items && e.dataTransfer.items.length > 0) {\r\n      this.setState({ drag: true })\r\n    }\r\n  }\r\n\r\n  handleDragOut = e => {\r\n    this.preventDefaultStopPropagation(e)\r\n    this.dragCounter--\r\n    if (this.dragCounter === 0) {\r\n      this.setState({ drag: false })\r\n    }\r\n  }\r\n\r\n  handleDrop = e => {\r\n    this.preventDefaultStopPropagation(e)\r\n    this.setState({ drag: false })\r\n    const { validateFiles } = this.props\r\n\r\n    if (e.dataTransfer.files && e.dataTransfer.files.length > 0) {\r\n      validateFiles(e.dataTransfer.files)\r\n    }\r\n    e.dataTransfer.clearData()\r\n    this.dragCounter = 0\r\n  }\r\n\r\n  componentDidMount() {\r\n    let div = this.dropRef.current\r\n    div.addEventListener('dragenter', this.handleDragIn)\r\n    div.addEventListener('dragleave', this.handleDragOut)\r\n    div.addEventListener('dragover', this.handleDrag)\r\n    div.addEventListener('drop', this.handleDrop)\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    let div = this.dropRef.current\r\n    div.removeEventListener('dragenter', this.handleDragIn)\r\n    div.removeEventListener('dragleave', this.handleDragOut)\r\n    div.removeEventListener('dragover', this.handleDrag)\r\n    div.removeEventListener('drop', this.handleDrop)\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"drag-drop\" ref={this.dropRef}>\r\n        <DragDropComponent drag={this.state.drag} />\r\n        {this.props.children}\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n  validateFiles,\r\n}\r\n\r\nexport default connect(null, mapDispatchToProps)(DragDrop)\r\n","import React from 'react'\r\n\r\nconst SmallPaperclipIcon = () => {\r\n  return (\r\n    <svg\r\n      width=\"17\"\r\n      height=\"15\"\r\n      viewBox=\"0 0 17 15\"\r\n      fill=\"none\"\r\n      xmlns=\"http://www.w3.org/2000/svg\"\r\n    >\r\n      <path\r\n        fillRule=\"evenodd\"\r\n        clipRule=\"evenodd\"\r\n        d=\"M3.4 14.743C2.608 14.743 1.8635 14.435 1.3035 13.8745C0.743498 13.3145 0.434998 12.57 0.434998 11.778C0.434998 10.9865 0.743498 10.2415 1.3035 9.6815L9.7885 1.1965C11.3345 -0.349 13.8505 -0.3495 15.396 1.1965C16.145 1.945 16.5575 2.941 16.5575 4C16.5575 5.059 16.145 6.055 15.396 6.8035L9.032 13.1675L8.3745 12.51L14.7385 6.146C15.922 4.9625 15.922 3.0375 14.7385 1.854C13.556 0.671 11.63 0.6705 10.4465 1.854L1.961 10.3395C1.5765 10.7235 1.365 11.2345 1.365 11.778C1.365 12.322 1.5765 12.8325 1.961 13.217C2.7545 14.0105 4.0455 14.01 4.839 13.217L11.203 6.853C11.6065 6.4495 11.6065 5.793 11.203 5.389C10.7995 4.9855 10.1425 4.986 9.7395 5.3895L5.4965 9.632L4.839 8.9745L9.0815 4.7315C9.8475 3.966 11.0945 3.9655 11.8605 4.7315C12.6265 5.498 12.6265 6.7445 11.8605 7.5105L5.4965 13.8745C4.9365 14.435 4.192 14.743 3.4 14.743\"\r\n        fill=\"#0055FB\"\r\n      />\r\n    </svg>\r\n  )\r\n}\r\n\r\nexport default SmallPaperclipIcon\r\n","import React from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { validateFiles } from '../../redux/attachedFiles/attachedFiles.actions'\r\nimport SmallPaperclipIcon from '../UI/Icons/SmallPaperclipIcon'\r\n\r\nconst FileInput = props => {\r\n  const { typeError, fileSizeError, totalSizeError } = props\r\n  return (\r\n    <div className=\"file-input\">\r\n      <label htmlFor=\"file\" className=\"file-input__label\">\r\n        <SmallPaperclipIcon />\r\n        <div className=\"file-input__label-name\">Прикрепить файл</div>\r\n      </label>\r\n      <input\r\n        type=\"file\"\r\n        id=\"file\"\r\n        name=\"file\"\r\n        multiple\r\n        hidden\r\n        onChange={e => props.validateFiles(e.target.files)}\r\n      />\r\n      <div className=\"file-input__error-message\">\r\n        <div data-error='type'>{typeError ? 'Не поддерживаемый тип файла' : null}</div>\r\n        <div data-error=\"singleFileSize\">\r\n          {fileSizeError ? 'Размер одного файла не должен превышать 5МБ' : null}\r\n        </div>\r\n        <div data-error=\"totalSize\">\r\n          {totalSizeError\r\n            ? 'Общий размер файлов не должен превышать 20МБ'\r\n            : null}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n  validateFiles,\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    typeError: state.errors.files.type,\r\n    fileSizeError: state.errors.files.singleFileSize,\r\n    totalSizeError: state.errors.files.totalFilesSize,\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(FileInput)\r\n","import React from 'react'\r\nimport { connect } from 'react-redux'\r\n\r\nconst Modal = props => {\r\n  return (\r\n    <div className=\"modal\">\r\n      <div className=\"modal__header\">\r\n        Сообщение поставлено в очередь на отправку\r\n      </div>\r\n      <div className=\"modal__message\">\r\n        Совсем скоро сообщение вылетит из сервера и будет двигаться в сторону\r\n        почты получателя {props.email} со скоростью электронов\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    email: state.receiver.email,\r\n  }\r\n}\r\n\r\n\r\nexport default connect(mapStateToProps, null)(Modal)\r\n","import React from 'react'\r\n\r\nconst TrashIcon = () => {\r\n  return (\r\n    <svg\r\n      width=\"13\"\r\n      height=\"16\"\r\n      viewBox=\"0 0 13 16\"\r\n      fill=\"none\"\r\n      xmlns=\"http://www.w3.org/2000/svg\"\r\n    >\r\n      <path\r\n        fillRule=\"evenodd\"\r\n        clipRule=\"evenodd\"\r\n        d=\"M4 5H5V13H4V5Z\"\r\n        fill=\"#FF6666\"\r\n      />\r\n      <path\r\n        fillRule=\"evenodd\"\r\n        clipRule=\"evenodd\"\r\n        d=\"M6 5H7V13H6V5Z\"\r\n        fill=\"#FF6666\"\r\n      />\r\n      <path\r\n        fillRule=\"evenodd\"\r\n        clipRule=\"evenodd\"\r\n        d=\"M8 5H9V13H8V5Z\"\r\n        fill=\"#FF6666\"\r\n      />\r\n      <path\r\n        fillRule=\"evenodd\"\r\n        clipRule=\"evenodd\"\r\n        d=\"M0 2H13V3H0V2Z\"\r\n        fill=\"#FF6666\"\r\n      />\r\n      <path\r\n        fillRule=\"evenodd\"\r\n        clipRule=\"evenodd\"\r\n        d=\"M8.96497 2.5H8.03497V1.5C8.03497 1.205 7.79497 0.965004 7.49997 0.965004H5.49997C5.20497 0.965004 4.96497 1.205 4.96497 1.5V2.5H4.03497V1.5C4.03497 0.692004 4.69247 0.0350037 5.49997 0.0350037H7.49997C8.30747 0.0350037 8.96497 0.692004 8.96497 1.5V2.5Z\"\r\n        fill=\"#FF6666\"\r\n      />\r\n      <path\r\n        fillRule=\"evenodd\"\r\n        clipRule=\"evenodd\"\r\n        d=\"M9.50003 16H3.50003C2.69303 16 1.98653 15.3455 1.92503 14.541L1.00153 2.5385L1.99853 2.4615L2.92203 14.4645C2.94403 14.75 3.21403 15 3.50003 15H9.50003C9.78603 15 10.056 14.75 10.078 14.465L11.0015 2.4615L11.9985 2.5385L11.075 14.541C11.0135 15.3455 10.307 16 9.50003 16Z\"\r\n        fill=\"#FF6666\"\r\n      />\r\n    </svg>\r\n  )\r\n}\r\n\r\nexport default TrashIcon\r\n","import React from 'react'\r\n\r\nconst BigPaperclipIcon = () => {\r\n  return (\r\n    <svg\r\n      width=\"34\"\r\n      height=\"30\"\r\n      viewBox=\"0 0 34 30\"\r\n      fill=\"none\"\r\n      xmlns=\"http://www.w3.org/2000/svg\"\r\n    >\r\n      <g opacity=\"0.4\">\r\n        <path\r\n          fillRule=\"evenodd\"\r\n          clipRule=\"evenodd\"\r\n          d=\"M6.79999 29.486C5.21599 29.486 3.72699 28.87 2.607 27.749C1.487 26.629 0.869995 25.14 0.869995 23.556C0.869995 21.973 1.487 20.483 2.607 19.363L19.577 2.393C22.669 -0.698 27.701 -0.699 30.792 2.393C32.29 3.89 33.115 5.882 33.115 8C33.115 10.118 32.29 12.11 30.792 13.607L18.064 26.335L16.749 25.02L29.477 12.292C31.844 9.925 31.844 6.075 29.477 3.708C27.112 1.342 23.26 1.341 20.893 3.708L3.922 20.679C3.153 21.447 2.73 22.469 2.73 23.556C2.73 24.644 3.153 25.665 3.922 26.434C5.509 28.021 8.09099 28.02 9.67799 26.434L22.406 13.706C23.213 12.899 23.213 11.586 22.406 10.778C21.599 9.971 20.285 9.972 19.479 10.779L10.993 19.264L9.67799 17.949L18.163 9.463C19.695 7.932 22.189 7.931 23.721 9.463C25.253 10.996 25.253 13.489 23.721 15.021L10.993 27.749C9.873 28.87 8.384 29.486 6.79999 29.486Z\"\r\n          fill=\"black\"\r\n        />\r\n      </g>\r\n    </svg>\r\n  )\r\n}\r\n\r\nexport default BigPaperclipIcon\r\n","import React from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { removeFile } from '../../redux/attachedFiles/attachedFiles.actions'\r\nimport TrashIcon from '../UI/Icons/TrashIcon'\r\nimport BigPaperclipIcon from '../UI/Icons/BigPaperclipIcon'\r\n\r\nconst AttachedFiles = props => {\r\n  const { files, removeFile } = props\r\n  return (\r\n    <div className=\"attachements-list\">\r\n      {files.map((file, index) => (\r\n        <div className=\"attachement mb-10\" key={index}>\r\n          <div className=\"attachement__icon\">\r\n          <BigPaperclipIcon />\r\n          </div>\r\n          <div className=\"attachement__name\">\r\n            <div className=\"attachement__file-name\">\r\n              {file.name.substring(0, file.name.lastIndexOf('.'))}\r\n            </div>\r\n            <div>{`.${file.name.substring(\r\n              file.name.lastIndexOf('.') + 1\r\n            )}`}</div>\r\n          </div>\r\n          <div\r\n            className=\"attachement__remove\"\r\n            onClick={() => removeFile(file)}\r\n          >\r\n            <TrashIcon />\r\n            <span className=\"attachement__remove-label\">Удалить</span>\r\n          </div>\r\n        </div>\r\n      ))}\r\n    </div>\r\n  )\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n  removeFile,\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    files: state.attachedFiles.files,\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(AttachedFiles)\r\n","import React from 'react'\r\nimport { connect } from 'react-redux'\r\nimport Sender from '../Sender&Receiver/Sender'\r\nimport Receiver from '../Sender&Receiver/Receiver'\r\nimport Message from '../Message/Message'\r\nimport Submit from '../Submit/Submit'\r\nimport DragDrop from '../DragDrop/DragDrop'\r\nimport FileInput from '../FileInput/FileInput'\r\nimport Modal from '../Modal/Modal'\r\nimport Attachement from '../Attachement/Attachement'\r\n\r\nconst Form = props => {\r\n  return (\r\n    <div className=\"form mt-20\">\r\n      <div className=\"form__content-wrapper\">\r\n        {props.modalState ? (\r\n          <Modal />\r\n        ) : (\r\n          <DragDrop>\r\n            <div className=\"header\">Отправлялка сообщений</div>\r\n            <Sender />\r\n            <Receiver />\r\n            <Message />\r\n            <Attachement />\r\n            <FileInput />\r\n            <Submit />\r\n          </DragDrop>\r\n        )}\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    modalState: state.modal,\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, null)(Form)\r\n","import React from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { updateMessageStatus } from '../../redux/sentMessage/sentMessage.actions'\r\nimport { useEffect } from 'react'\r\nimport classnames from 'classnames'\r\n\r\nconst SentMessage = props => {\r\n  const { id, date, subject, status } = props.message\r\n  const { updateMessageStatus } = props\r\n  let statusMessage\r\n\r\n  if (status === -1) {\r\n    statusMessage = 'Отправлено'\r\n  }\r\n  if (status > -1) {\r\n    statusMessage = 'В очереди'\r\n  }\r\n\r\n  if (status < -1) {\r\n    statusMessage = 'Ошибка'\r\n  }\r\n  useEffect(() => {\r\n    if (status > -1) {\r\n      let timer = setInterval(() => {\r\n        updateMessageStatus(id)\r\n      }, 5000)\r\n      return () => {\r\n        clearInterval(timer)\r\n      }\r\n    }\r\n  })\r\n  return (\r\n    <div className=\"list__item\">\r\n      <div data-name=\"date\" className=\"list__date\">\r\n        {date}\r\n      </div>\r\n      <div data-name=\"subject\" className=\"list__subject\">\r\n        {subject}\r\n      </div>\r\n      <div\r\n        data-name=\"status\"\r\n        className={classnames(\r\n          'list__status',\r\n          { 'list__status_success': status === -1 },\r\n          { 'list__status_pending': status > -1 },\r\n          { 'list__status_error': status < -1 }\r\n        )}\r\n      >\r\n        {statusMessage}\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n  updateMessageStatus,\r\n}\r\n\r\nexport default connect(null, mapDispatchToProps)(SentMessage)\r\n","import React from 'react'\r\nimport { connect } from 'react-redux'\r\nimport SentMessage from './SentMessage'\r\nimport classNames from 'classnames'\r\n\r\nconst SentMessages = props => {\r\n  const { sentMessages } = props\r\n  const sentMessagesExist = Object.keys(sentMessages).length\r\n\r\n  return (\r\n    <div className=\"list mt-50\">\r\n      <div className=\"list__header\">Отправленные сообщения</div>\r\n      <div\r\n        className={classNames('list__item_hidden', {\r\n          'list__item list__item_header': sentMessagesExist,\r\n        })}\r\n      >\r\n        <div className=\"list__date\">Дата</div>\r\n        <div className=\"list__subject\">Тема</div>\r\n        <div className=\"list__status\">Статус</div>\r\n      </div>\r\n      <div className=\"list__items\">\r\n        {sentMessagesExist ? (\r\n          Object.values(sentMessages).map(message => (\r\n            <SentMessage key={message.id} message={message} />\r\n          ))\r\n        ) : (\r\n          <div>Сообщения еще не отправлялись</div>\r\n        )}\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    sentMessages: state.sentMessage,\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, null)(SentMessages)\r\n","import React from 'react'\r\n\r\nconst Logo = () => {\r\n  return (\r\n    <svg\r\n      width=\"230\"\r\n      height=\"60\"\r\n      viewBox=\"0 0 230 60\"\r\n      fill=\"none\"\r\n      xmlns=\"http://www.w3.org/2000/svg\"\r\n    >\r\n      <circle cx=\"30\" cy=\"30\" r=\"30\" fill=\"#C4C4C4\" />\r\n      <circle cx=\"140\" cy=\"30\" r=\"30\" fill=\"#C4C4C4\" />\r\n      <rect x=\"70\" width=\"30\" height=\"60\" fill=\"#C4C4C4\" />\r\n      <path d=\"M200 0H230L200 60H170L200 0Z\" fill=\"#C4C4C4\" />\r\n    </svg>\r\n  )\r\n}\r\n\r\nexport default Logo\r\n","import React from 'react'\r\nimport Form from '../Form/Form'\r\nimport SentMessages from '../SentMessages/SentMessages'\r\nimport Logo from '../UI/Icons/Logo'\r\n\r\nconst App = () => {\r\n  return (\r\n    <div className=\"container\">\r\n      <Logo />\r\n      <Form />\r\n      <SentMessages />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default App\r\n","import { UPDATE_SENDER_NAME, UPDATE_SENDER_EMAIL, CLEAR_SENDER } from './sender.types'\r\n\r\nconst initialState = {\r\n  name: '',\r\n  email: '',\r\n}\r\n\r\nconst sender = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case UPDATE_SENDER_NAME:\r\n    case UPDATE_SENDER_EMAIL:\r\n      action.payload.persist()\r\n      return {\r\n        ...state,\r\n        [action.payload.target.name]: action.payload.target.value,\r\n      }\r\n    case CLEAR_SENDER:\r\n      return {...state, ...initialState}\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nexport default sender\r\n","import { UPDATE_RECEIVER_NAME, UPDATE_RECEIVER_EMAIL, CLEAR_RECEIVER } from './receiver.types'\r\n\r\nconst initialState = {\r\n  name: '',\r\n  email: '',\r\n}\r\n\r\nconst receiver = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case UPDATE_RECEIVER_NAME:\r\n    case UPDATE_RECEIVER_EMAIL:\r\n      action.payload.persist()\r\n      return {\r\n        ...state,\r\n        [action.payload.target.name]: action.payload.target.value,\r\n      }\r\n    case CLEAR_RECEIVER:\r\n      return {...state, ...initialState}\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nexport default receiver\r\n","import { UPDATE_MESSAGE_SUBJECT, UPDATE_MESSAGE_TEXT, CLEAR_MESSAGE } from './message.types'\r\n\r\nconst initialState = {\r\n  subject: '',\r\n  text: '',\r\n}\r\n\r\nconst message = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case UPDATE_MESSAGE_SUBJECT:\r\n    case UPDATE_MESSAGE_TEXT:\r\n      action.payload.persist()\r\n      return {\r\n        ...state,\r\n        [action.payload.target.name]: action.payload.target.value,\r\n      }\r\n    case CLEAR_MESSAGE:\r\n      return {...state, ...initialState}\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nexport default message\r\n","import { DISPLAY_INPUT_ERRORS, DISPLAY_FILE_ERRORS } from './errors.types'\r\n\r\nconst initialState = {\r\n  input: {\r\n    senderName: false,\r\n    senderEmail: {\r\n      empty: false,\r\n      invalid: false,\r\n    },\r\n    receiverName: false,\r\n    receiverEmail: {\r\n      empty: false,\r\n      invalid: false,\r\n    },\r\n    subject: false,\r\n    message: false,\r\n  },\r\n  files: {\r\n    type: false,\r\n    singleFileSize: false,\r\n    totalFilesSize: false,\r\n  },\r\n}\r\n\r\nconst errors = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case DISPLAY_INPUT_ERRORS:\r\n    case DISPLAY_FILE_ERRORS:\r\n      return {\r\n        ...state,\r\n        ...action.payload,\r\n      }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nexport default errors\r\n","export const DISPLAY_INPUT_ERRORS = 'DISPLAY_INPUT_ERRORS'\r\nexport const DISPLAY_FILE_ERRORS = 'DISPLAY_FILE_ERRORS'","import update from 'immutability-helper'\r\n\r\nimport {\r\n  ADD_FILES,\r\n  VALIDATE_FILES,\r\n  REMOVE_FILE,\r\n  CLEAR_FILES,\r\n} from './attachedFiles.types'\r\n\r\nconst initialState = {\r\n  files: [],\r\n  totalSize: null,\r\n}\r\n\r\nconst attachedFiles = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case VALIDATE_FILES:\r\n      return state\r\n    case ADD_FILES:\r\n      let addTotalSize = state.totalSize\r\n      action.payload.forEach(item => (addTotalSize += item.size))\r\n      const addFilesState = {\r\n        files: update(state.files, { $push: action.payload }),\r\n        totalSize: addTotalSize,\r\n      }\r\n      return { ...state, ...addFilesState }\r\n    case REMOVE_FILE:\r\n      const removeFilesState = state.files.filter(\r\n        file => file.name !== action.payload.name\r\n      )\r\n      let substractTotalSize = null\r\n      removeFilesState.forEach(file => (substractTotalSize += file.size))\r\n      const newState = {\r\n        files: update(state.files, { $set: removeFilesState }),\r\n        totalSize: substractTotalSize,\r\n      }\r\n      return { ...state, ...newState }\r\n    case CLEAR_FILES:\r\n      return { ...state, ...initialState }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nexport default attachedFiles\r\n","import {\r\n  SUBMIT_MESSAGE,\r\n  ADD_TO_SENT,\r\n  UPDATE_MESSAGE_STATUS,\r\n  UPDATE__STATUS,\r\n} from './sentMessage.types'\r\n\r\nconst sentMessage = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case SUBMIT_MESSAGE:\r\n    case UPDATE_MESSAGE_STATUS:\r\n      return state\r\n    case ADD_TO_SENT:\r\n      const newState = {\r\n        [action.payload.id]: {\r\n        id: action.payload.id,\r\n        subject: action.payload.subject,\r\n        date: action.payload.date,\r\n        status: null,\r\n      }}\r\n      return {...state, ...newState}\r\n    case UPDATE__STATUS:\r\n      return {\r\n        ...state,\r\n        [action.payload.id]: {\r\n          ...state[action.payload.id],\r\n          status: +action.payload.status,\r\n        },\r\n      }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nexport default sentMessage\r\n","import { TOGGLE_MODAL } from './modal.types'\r\n\r\nconst modal = (state = false, action) => {\r\n  switch (action.type) {\r\n    case TOGGLE_MODAL:\r\n      return !state\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nexport default modal\r\n","export const TOGGLE_MODAL = 'TOGGLE_MODAL'","import { TOGGLE_SUBMIT_BUTTON } from './submitButton.types'\r\n\r\nconst submitButton = (state = true, action) => {\r\n  switch (action.type) {\r\n    case TOGGLE_SUBMIT_BUTTON:\r\n      return !state\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nexport default submitButton","export const TOGGLE_SUBMIT_BUTTON = 'TOGGLE_SUBMIT_BUTTON'","import { combineReducers } from 'redux'\r\nimport sender from './sender/sender.reducer'\r\nimport receiver from './receiver/receiver.reducer'\r\nimport message from './message/message.reducer'\r\nimport errors from './errors/errors.reducer'\r\nimport attachedFiles from './attachedFiles/attachedFiles.reducer'\r\nimport sentMessage from './sentMessage/sentMessage.reducer'\r\nimport modal from './modal/modal.reducer'\r\nimport submitButton from './submitButton/submitButton.reducer'\r\n\r\nconst reducerApp = combineReducers({\r\n  sender,\r\n  receiver,\r\n  message,\r\n  errors,\r\n  attachedFiles,\r\n  sentMessage,\r\n  modal,\r\n  submitButton\r\n})\r\n\r\nexport default reducerApp\r\n","export const emptyInputValidation = input => {\r\n  return !input.length > 0\r\n}\r\n\r\nexport const emailValidation = input => {\r\n  const emailValidationRegEx = new RegExp(\r\n    '^[a-zA-Z0-9_.+-]+@[a-zA-Z0-9-]+.[a-zA-Z0-9-.]+$'\r\n  )\r\n  return !emailValidationRegEx.test(input)\r\n}\r\n","import { displayInputErrors } from '../redux/errors/errors.actions'\r\nimport { SUBMIT_MESSAGE } from '../redux/sentMessage/sentMessage.types'\r\nimport {\r\n  emptyInputValidation,\r\n  emailValidation,\r\n} from '../utils/validationHelpers'\r\n\r\nconst inputValidationMiddleware = ({\r\n  dispatch,\r\n  getState,\r\n}) => next => action => {\r\n  if (action.type !== SUBMIT_MESSAGE) {\r\n    return next(action)\r\n  }\r\n\r\n  const {\r\n    sender: { name: senderName, email: senderEmail },\r\n    receiver: { name: receiverName, email: receiverEmail },\r\n    message: { subject, text },\r\n  } = getState()\r\n\r\n  const inputErrors = {\r\n    input: {\r\n      senderName: emptyInputValidation(senderName),\r\n      senderEmail: {\r\n        empty: emptyInputValidation(senderEmail),\r\n        invalid: emailValidation(senderEmail),\r\n      },\r\n      receiverName: emptyInputValidation(receiverName),\r\n      receiverEmail: {\r\n        empty: emptyInputValidation(receiverEmail),\r\n        invalid: emailValidation(receiverEmail),\r\n      },\r\n      subject: emptyInputValidation(subject),\r\n      text: emptyInputValidation(text),\r\n    },\r\n  }\r\n\r\n  const inputsAreValid = errors => {\r\n    return Object.values(errors).some(value => {\r\n      if (typeof value === 'object') {\r\n        return inputsAreValid(value)\r\n      }\r\n      return value\r\n    })\r\n  }\r\n\r\n  dispatch(displayInputErrors(inputErrors))\r\n\r\n  if (!inputsAreValid(inputErrors.input)) {\r\n    next(action)\r\n  }\r\n}\r\n\r\nexport default inputValidationMiddleware\r\n","import * as types from './errors.types'\r\n\r\nexport const displayInputErrors = payload => {\r\n  return {\r\n    type: types.DISPLAY_INPUT_ERRORS,\r\n    payload,\r\n  }\r\n}\r\n\r\nexport const displayFileErrors = payload => {\r\n  return {\r\n    type: types.DISPLAY_FILE_ERRORS,\r\n    payload,\r\n  }\r\n}\r\n","import { displayFileErrors } from '../redux/errors/errors.actions'\r\nimport { addFiles } from '../redux/attachedFiles/attachedFiles.actions'\r\nimport { VALIDATE_FILES } from '../redux/attachedFiles/attachedFiles.types'\r\n\r\nconst filesValidationMiddleware = ({ dispatch, getState }) => next => action => {\r\n  if (action.type !== VALIDATE_FILES) {\r\n    return next(action)\r\n  }\r\n\r\n  const errors = {\r\n    files: {},\r\n  }\r\n  const fileTypes = [\r\n    'jpg',\r\n    'jpeg',\r\n    'png',\r\n    'gif',\r\n    'pdf',\r\n    'doc',\r\n    'docx',\r\n    'xls',\r\n    'xlsx',\r\n    'zip',\r\n  ]\r\n  let {attachedFiles: {totalSize} } = getState()\r\n  let totalFilesSize = null;\r\n  for (let file of action.payload) {\r\n    totalFilesSize += file.size\r\n    if (\r\n      !fileTypes.includes(file.name.substring(file.name.lastIndexOf('.') + 1))\r\n    ) {\r\n      errors.files.type = true\r\n    } else if (file.size > 5242880) {\r\n      errors.files.singleFileSize = true\r\n    }  else if (totalSize + file.size > 20971520) {\r\n      errors.files.totalFilesSize = true\r\n    }\r\n  }\r\n    if(totalFilesSize > 20971520) {\r\n      errors.files.totalFilesSize = true\r\n    }\r\n  \r\n  \r\n \r\n  dispatch(displayFileErrors(errors))\r\n\r\n  if (!Object.keys(errors.files).length) {\r\n    dispatch(addFiles(action.payload))\r\n  }\r\n\r\n  next(action)\r\n}\r\n\r\nexport default filesValidationMiddleware\r\n","import Sendsay from 'sendsay-api'\r\nimport { SUBMIT_MESSAGE } from '../redux/sentMessage/sentMessage.types'\r\nimport { addToSent } from '../redux/sentMessage/sentMessage.actions'\r\nimport { toggleModal } from '../redux/modal/modal.actions'\r\nimport { toggleSubmitButton } from '../redux/submitButton/submitButton.actions'\r\nimport { clearAttachedFiles } from '../redux/attachedFiles/attachedFiles.actions'\r\nimport { clearMessage } from '../redux/message/message.actions'\r\nimport { clearReceiver } from '../redux/receiver/receiver.actions'\r\nimport { clearSender } from '../redux/sender/sender.actions'\r\n\r\nconst submitMessageMiddleware = ({ dispatch, getState }) => next => action => {\r\n  if (action.type !== SUBMIT_MESSAGE) {\r\n    return next(action)\r\n  }\r\n\r\n  const {\r\n    sender: { name: senderName, email: senderEmail },\r\n    receiver: { name: receiverName, email: receiverEmail },\r\n    message: { subject, text },\r\n    attachedFiles: { files },\r\n  } = getState()\r\n\r\n  const sendsay = new Sendsay({ apiKey: process.env.REACT_APP_APIKEY })\r\n\r\n  sendsay\r\n    .request({\r\n      action: 'issue.send.test',\r\n      letter: {\r\n        subject: subject,\r\n        'from.name': senderName,\r\n        'from.email': senderEmail,\r\n        'to.name': receiverName,\r\n        message: { text: text },\r\n        attaches: [...files],\r\n      },\r\n      sendwhen: 'test',\r\n      mca: [receiverEmail],\r\n    })\r\n    .then(response => {\r\n      dispatch(toggleSubmitButton())\r\n      dispatch(toggleModal())\r\n      dispatch(addToSent({ id: response['track.id'], subject: subject }))\r\n      setTimeout(() => dispatch(clearAllFields()), 5000)\r\n    })\r\n\r\n  next(action)\r\n\r\n  const clearAllFields = () => dispatch => {\r\n    dispatch(toggleSubmitButton())\r\n    dispatch(clearAttachedFiles())\r\n    dispatch(toggleModal())\r\n    dispatch(clearMessage())\r\n    dispatch(clearReceiver())\r\n    dispatch(clearSender())\r\n  }\r\n}\r\n\r\nexport default submitMessageMiddleware\r\n","import * as types from \"./submitButton.types\"\r\n\r\nexport const toggleSubmitButton = () => {\r\n    return {\r\n      type: types.TOGGLE_SUBMIT_BUTTON,\r\n    }\r\n  }","import * as types from './modal.types'\r\n\r\nexport const toggleModal = () => {\r\n  return {\r\n    type: types.TOGGLE_MODAL,\r\n  }\r\n}\r\n\r\n\r\n","import Sendsay from 'sendsay-api'\r\nimport { UPDATE_MESSAGE_STATUS } from '../redux/sentMessage/sentMessage.types'\r\nimport { updateStatus } from '../redux/sentMessage/sentMessage.actions'\r\n\r\nconst statusUpdateMiddleware = ({ dispatch }) => next => action => {\r\n  if (action.type !== UPDATE_MESSAGE_STATUS) {\r\n    return next(action)\r\n  }\r\n\r\n  const sendsay = new Sendsay({\r\n    apiKey: process.env.REACT_APP_APIKEY,\r\n  })\r\n\r\n  sendsay\r\n    .request({\r\n      action: 'track.get',\r\n      id: action.payload,\r\n    })\r\n    .then(res => {\r\n      dispatch(\r\n        updateStatus({\r\n          id: action.payload,\r\n          status: res.obj.status,\r\n        })\r\n      )\r\n    })\r\n\r\n  next(action)\r\n}\r\n\r\nexport default statusUpdateMiddleware\r\n","import { createStore, applyMiddleware } from 'redux'\r\nimport reducerApp from './rootReducer'\r\nimport thunk from 'redux-thunk';\r\nimport { composeWithDevTools } from 'redux-devtools-extension'\r\nimport inputValidationMiddleware from '../middleware/inputValidationMiddleware'\r\nimport filesValidationMiddleware from '../middleware/filesValidationMiddleware'\r\nimport submitMessageMiddleware from '../middleware/submitMessageMiddleware'\r\nimport statusUpdateMiddleware from '../middleware/statusUpdateMiddleware'\r\n\r\nconst store = createStore(\r\n  reducerApp,\r\n  composeWithDevTools(\r\n    applyMiddleware(\r\n      inputValidationMiddleware,\r\n      filesValidationMiddleware,\r\n      submitMessageMiddleware,\r\n      statusUpdateMiddleware,\r\n      thunk\r\n    )\r\n  )\r\n)\r\n\r\nexport default store\r\n","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport './index.css'\r\nimport App from './components/App/App'\r\nimport store from './redux/store'\r\nimport { Provider } from 'react-redux'\r\n\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <App />\r\n  </Provider>,\r\n  document.getElementById('root')\r\n)\r\n"],"sourceRoot":""}